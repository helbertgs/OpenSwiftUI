{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScenePhase"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The system moves your app’s "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Scene"},{"type":"text","text":" instances through phases that reflect"},{"type":"text","text":" "},{"type":"text","text":"a scene’s operational state. You can trigger actions when the phase changes."},{"type":"text","text":" "},{"type":"text","text":"Read the current phase by observing the "},{"type":"codeVoice","code":"EnvironmentValues\/scenePhase"},{"type":"text","text":" "},{"type":"text","text":"value in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment"},{"type":"text","text":":"}]},{"type":"codeListing","syntax":null,"code":["@Environment(\\.scenePhase) private var scenePhase"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"How you interpret the value depends on where it’s read from."},{"type":"text","text":" "},{"type":"text","text":"If you read the phase from inside a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View"},{"type":"text","text":" instance, you obtain a value"},{"type":"text","text":" "},{"type":"text","text":"that reflects the phase of the scene that contains the view. The following"},{"type":"text","text":" "},{"type":"text","text":"example uses the "},{"type":"codeVoice","code":"OpenSwiftUI\/View\/onChange(of:perform:)"},{"type":"text","text":" method to enable"},{"type":"text","text":" "},{"type":"text","text":"a timer whenever the enclosing scene enters the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/active"},{"type":"text","text":" phase"},{"type":"text","text":" "},{"type":"text","text":"and disable the timer when entering any other phase:"}]},{"type":"codeListing","syntax":null,"code":["struct MyView: View {","    @ObservedObject var model: DataModel","    @Environment(\\.scenePhase) private var scenePhase","","    var body: some View {","        TimerView()","            .onChange(of: scenePhase) { phase in","                model.isTimerRunning = (phase == .active)","            }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you read the phase from within an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/App"},{"type":"text","text":" instance, you obtain an"},{"type":"text","text":" "},{"type":"text","text":"aggregate value that reflects the phases of all the scenes in your app. The"},{"type":"text","text":" "},{"type":"text","text":"app reports a value of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/active"},{"type":"text","text":" if any scene is active, or a"},{"type":"text","text":" "},{"type":"text","text":"value of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/inactive"},{"type":"text","text":" when no scenes are active. This includes"},{"type":"text","text":" "},{"type":"text","text":"multiple scene instances created from a single scene declaration; for"},{"type":"text","text":" "},{"type":"text","text":"example, from a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/WindowGroup"},{"type":"text","text":". When an app enters the"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/background"},{"type":"text","text":" phase, expect the app to terminate soon after."},{"type":"text","text":" "},{"type":"text","text":"You can use that opportunity to free any resources:"}]},{"type":"codeListing","syntax":null,"code":["@main","struct MyApp: App {","    @Environment(\\.scenePhase) private var scenePhase","","    var body: some Scene {","        WindowGroup {","            MyRootView()","        }","        .onChange(of: scenePhase) { phase in","            if phase == .background {","                \/\/ Perform cleanup when all scenes within","                \/\/ MyApp go to the background.","            }","        }","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you read the phase from within a custom "},{"type":"reference","isActive":true,"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Scene"},{"type":"text","text":" instance, the value"},{"type":"text","text":" "},{"type":"text","text":"similarly reflects an aggregation of all the scenes that make up the custom"},{"type":"text","text":" "},{"type":"text","text":"scene:"}]},{"type":"codeListing","syntax":null,"code":["struct MyScene: Scene {","    @Environment(\\.scenePhase) private var scenePhase","","    var body: some Scene {","        WindowGroup {","            MyRootView()","        }","        .onChange(of: scenePhase) { phase in","            if phase == .background {","                \/\/ Perform cleanup when all scenes within","                \/\/ MyScene go to the background.","            }","        }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/openswiftui\/scenephase"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/OpenSwiftUI\/SL","doc:\/\/OpenSwiftUI\/SQ","doc:\/\/OpenSwiftUI\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"An indication of a scene’s operational state."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScenePhase"}],"title":"ScenePhase","roleHeading":"Enumeration","role":"symbol","symbolKind":"enum","externalID":"s:11OpenSwiftUI10ScenePhaseO","modules":[{"name":"OpenSwiftUI"}],"navigatorTitle":[{"kind":"identifier","text":"ScenePhase"}]},"hierarchy":{"paths":[["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/active","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/background","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/inactive"]},{"title":"Default Implementations","identifiers":["doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/-Implementations","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/-Implementations","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/Comparable-Implementations","doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/Equatable-Implementations"],"generated":true}],"references":{"doc://OpenSwiftUI/documentation/OpenSwiftUI/ScenePhase/Comparable-Implementations":{"role":"collectionGroup","title":"Comparable Implementations","abstract":[],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/Comparable-Implementations","kind":"article","type":"topic","url":"\/documentation\/openswiftui\/scenephase\/comparable-implementations"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/WindowGroup":{"role":"symbol","title":"WindowGroup","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WindowGroup"}],"abstract":[{"type":"text","text":"A scene that presents a group of identically structured windows."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/WindowGroup","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WindowGroup"}],"url":"\/documentation\/openswiftui\/windowgroup"},"doc://OpenSwiftUI/SL":{"type":"unresolvable","title":"Swift.Comparable","identifier":"doc:\/\/OpenSwiftUI\/SL"},"doc://OpenSwiftUI/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/OpenSwiftUI\/SH"},"doc://OpenSwiftUI/documentation/OpenSwiftUI":{"role":"collection","title":"OpenSwiftUI","abstract":[],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ScenePhase/inactive":{"role":"symbol","title":"ScenePhase.inactive","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"inactive"}],"abstract":[{"type":"text","text":"The scene is in the foreground but should pause its work."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/inactive","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/scenephase\/inactive"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ScenePhase/-Implementations":{"role":"collectionGroup","title":" Implementations","abstract":[],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/-Implementations","kind":"article","type":"topic","url":"\/documentation\/openswiftui\/scenephase\/-implementations"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ScenePhase/background":{"role":"symbol","title":"ScenePhase.background","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"background"}],"abstract":[{"type":"text","text":"The scene isn’t currently visible in the UI."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/background","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/scenephase\/background"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Environment":{"role":"symbol","title":"Environment","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Environment"}],"abstract":[{"type":"text","text":"A property wrapper that reads a value from a view’s environment."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Environment","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Environment"}],"url":"\/documentation\/openswiftui\/environment"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/View":{"role":"symbol","title":"View","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"View"}],"abstract":[{"type":"text","text":"A type that represents part of your app’s user interface and provides"},{"type":"text","text":" "},{"type":"text","text":"modifiers that you use to configure views."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/View","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"View"}],"url":"\/documentation\/openswiftui\/view"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ScenePhase":{"role":"symbol","title":"ScenePhase","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ScenePhase"}],"abstract":[{"type":"text","text":"An indication of a scene’s operational state."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ScenePhase"}],"url":"\/documentation\/openswiftui\/scenephase"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/Scene":{"role":"symbol","title":"Scene","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Scene"}],"abstract":[{"type":"text","text":"A part of an app’s user interface with a life cycle managed by the"},{"type":"text","text":" "},{"type":"text","text":"system."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/Scene","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Scene"}],"url":"\/documentation\/openswiftui\/scene"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ScenePhase/active":{"role":"symbol","title":"ScenePhase.active","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"active"}],"abstract":[{"type":"text","text":"The scene is in the foreground and interactive."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/active","kind":"symbol","type":"topic","url":"\/documentation\/openswiftui\/scenephase\/active"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/App":{"role":"symbol","title":"App","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"App"}],"abstract":[{"type":"text","text":"A type that represents the structure and behavior of an app."}],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/App","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"App"}],"url":"\/documentation\/openswiftui\/app"},"doc://OpenSwiftUI/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/OpenSwiftUI\/SQ"},"doc://OpenSwiftUI/documentation/OpenSwiftUI/ScenePhase/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/OpenSwiftUI\/documentation\/OpenSwiftUI\/ScenePhase\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/openswiftui\/scenephase\/equatable-implementations"}}}